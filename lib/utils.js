// Generated by CoffeeScript 1.6.3
(function() {
  var h, helpers, inspect, kamelKey, _, _str;

  _ = require('lodash');

  _str = require('underscore.string');

  kamelKey = function(k) {
    if (k.indexOf('_') === 0) {
      return '_' + kamelKey(k.substring(1));
    } else {
      return _str.camelize(k);
    }
  };

  inspect = (function() {
    var opts, util;
    util = require('util');
    opts = {
      depth: null,
      colors: true
    };
    return function(ref) {
      return console.log(util.inspect(ref, opts));
    };
  })();

  helpers = h = {
    negate: _.curry(function(fn, x) {
      return !fn(x);
    }),
    isSimple: function(x) {
      if (!_.isObject(x)) {
        return true;
      }
    },
    notSimple: h.negate(h.isSimple),
    parse10: function(x) {
      return parseInt(x);
    },
    includes: _.curry(function(y, x) {
      return x.indexOf(y) !== -1;
    }),
    isIntStr: (function() {
      var numeric;
      numeric = /^[0-9]+$/igm;
      return function(x) {
        return numeric.test(x);
      };
    })(),
    notIntStr: h.negate(h.isIntStr),
    maybeIntStr: function(x) {
      if (_.isNumber(x)) {
        return x;
      }
      if (h.notIntStr(x)) {
        return x;
      }
      return h.parse10(x);
    },
    keyString: function(x) {
      var parts;
      if (!h.includes('.', x)) {
        return x;
      }
      parts = _.map(x.split('.'), function(v) {
        return h.maybeIntStr(v);
      });
      return parts;
    }
  };

  module.exports = _.extend(helpers, {
    kamelKey: kamelKey,
    inspect: inspect
  });

}).call(this);
